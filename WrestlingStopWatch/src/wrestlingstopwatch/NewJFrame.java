/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wrestlingstopwatch;

//import stopwatch.NewJFrame1;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.concurrent.ExecutorService;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
//import static stopwatch.NewJFrame1.OPTIMAL_TIME;

/**
 *
 * @author tharu
 */
public class NewJFrame extends javax.swing.JFrame {
    
    private DecimalFormat numFormat = new DecimalFormat();//the display format, set so the text field displays a number with 2 decimal places
    
     static final int FPS = 100; //fps of the game loop or amount of updates a second
    static final long OPTIMAL_TIME = 1000000000 / FPS;//sets the amount of time each loop should take
    private boolean countStart = true;//true if the count down has started
	private boolean countOver = true;//true just for a brief moment when the counter hits 0
	
        private double counter=60;//the stop watch counter, will be dropped 1.0 a second when the stop watch is started
        private boolean clicked = false;
        private int minutes = 6;
        private boolean running = true;//if made false the game loop will end
        private boolean NewRunning = false;
        private boolean PausedPressed = false;
        private boolean StopPressed = false;
        private boolean RedPressed = false;
        private boolean BluePressed = false;
        private int SixMinutesOrFourMinutes = 0;
        private int OnaBreak = 0;
        private int BreakSecondValue = 30;
        
        private double counterForThirtySeconds =30;//the stop watch counter, will be dropped 1.0 a second when the stop watch is started
        private boolean clickedForThirtySeconds = false;
        private boolean runningForThirtySeconds = true;//if made false the game loop will end
        private boolean NewRunningForThirtySeconds = false;
        private boolean PausedPressedForThirtySeconds = false;
        private boolean StopPressedForThirtySeconds = false;
        
        private double counterForFourMinutes=60;//the stop watch counter, will be dropped 1.0 a second when the stop watch is started
        private boolean clickedForFourMinutes = false;
        private int minutesForFourMinutes = 4;
        private boolean runningForFourMinutes = true;//if made false the game loop will end
        private boolean NewRunningForFourMinutes = false;
        private boolean PausedPressedForFourMinutes = false;
        private boolean StopPressedForFourMinutes = false;
        private boolean RedPressedForFourMinutes = false;
        private boolean BluePressedForFourMinutes = false;
        private int SixMinutesOrFourMinutesForFourMinutes = 0;
        private int OnaBreakForFourMinutes = 0;
        private int BreakSecondValueForFourMinutes = 30;
        

    public NewJFrame() {
       
        initComponents();
        setIcon();
        setVisible(true);
        numFormat.applyPattern("00.00");	
        jLabel3.setText(numFormat.format(BreakSecondValue));
        jRadioButton3.setSelected(true);
        TheStopWatchFunc();
    }
    
       public static void main(String args[]) {
  
        new NewJFrame();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new NewJFrame1().setVisible(true);
                
            }
        });
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 350)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setLabelFor(jLabel1);
        jLabel1.setText("00.00");
        jLabel1.setToolTipText("");

        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 350)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setLabelFor(jLabel1);
        jLabel2.setText("6.");

        jButton2.setText("PAUSE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("STOP");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 150)); // NOI18N
        jLabel3.setText("30.00");

        jRadioButton1.setText("RED");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("BLUE");
        jRadioButton2.setToolTipText("");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("NONE");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "6 Minutes", "4 Minutes" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton4.setText("STOP");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("PAUSE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("START");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(59, 59, 59)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton3)
                    .addComponent(jButton6)
                    .addComponent(jButton5)
                    .addComponent(jButton4))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: The Start Button
        
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
        jButton3.setEnabled(false);
        
        jComboBox1.disable();
        if(StopPressed){
            NewRunning = true;
            PausedPressed = false;
            StopPressed = false;
            
            if(SixMinutesOrFourMinutes==0){
            counter = 60;
            minutes = 6;
            jLabel2.setText("6.");
            }else{
            counterForFourMinutes = 60;
            minutesForFourMinutes = 4;
            jLabel2.setText("4.");
            }
            
        }
        else if(PausedPressed){
         NewRunning = true;
         PausedPressed = false;
          StopPressed = false;
          if(OnaBreak==1){
              OnaBreak=1;
          }else if(OnaBreak==2){
          OnaBreak=3;
          }
        }
        else{
             PausedPressed = false;
          StopPressed = false;   
        NewRunning = true;  
        
         if(SixMinutesOrFourMinutes==0){
            counter = 60;
            minutes = 6;
            jLabel2.setText("6.");
            }else{
            counterForFourMinutes = 60;
            minutesForFourMinutes = 4;
            jLabel2.setText("4.");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here: The Stop Button
        
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        
         jComboBox1.enable();
        StopPressed = true;
         NewRunning = false;  
         PausedPressed=false;
         
          if(SixMinutesOrFourMinutes==0){
            counter = 60;
            minutes = 6;
            jLabel2.setText("6.");
             numFormat.applyPattern("00.00");	
                jLabel1.setText(numFormat.format(0));
            }else{
            counterForFourMinutes = 60;
            minutesForFourMinutes = 4;
            jLabel2.setText("4.");
             numFormat.applyPattern("00.00");	
                jLabel1.setText(numFormat.format(0));
            }
          
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here: The Pause Button
        
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jButton3.setEnabled(true);
        
         jComboBox1.disable();
        NewRunning = false; 
        PausedPressed = true;
        OnaBreak = 1;
//        StopPressed = false;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        RedPressed = true;
        BluePressed = false;
        
         jPanel1.setBackground(Color.red);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
         jRadioButton3.setSelected(false);
        BluePressed = true;
        RedPressed = false;
         
         jPanel1.setBackground(Color.blue);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        jRadioButton2.setSelected(false);
         jRadioButton1.setSelected(false);
       
        jPanel1.setBackground(Color.white);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // //Here for Stop button in break seconds
        
        counterForThirtySeconds = 30;
        clickedForThirtySeconds = false;
        numFormat.applyPattern("00.00");	
        jLabel3.setText(numFormat.format(counterForThirtySeconds));
        jButton4.setEnabled(false);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Here for paused button in break seconds
        clickedForThirtySeconds = false;
        jButton4.setEnabled(true);
        jButton5.setEnabled(false);
        jButton6.setEnabled(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Here for Start button in break seconds
        clickedForThirtySeconds = true;
        jButton4.setEnabled(false);
        jButton5.setEnabled(true);
        jButton6.setEnabled(false);
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        System.out.println(jComboBox1.getSelectedItem().toString()); //4 Minutes //6 Minutes
        if(jComboBox1.getSelectedItem().toString()=="6 Minutes"){
        SixMinutesOrFourMinutes = 0;
          jComboBox1.enable();
        StopPressed = true;
         NewRunning = false;  
         PausedPressed=false;
        counter = 60;
        minutes = 6;
        jLabel2.setText("6.");
         numFormat.applyPattern("00.00");	
                
                jLabel1.setText(numFormat.format(0));
        }else{
        SixMinutesOrFourMinutes = 1;
          jComboBox1.enable();
        StopPressed = true;
         NewRunning = false;  
         PausedPressed=false;
        counter = 60;
        minutes = 6;
        jLabel2.setText("4.");
         numFormat.applyPattern("00.00");	
                
                jLabel1.setText(numFormat.format(0));
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
//    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
//        // TODO add your handling code here:
//        //TheWindow.printText(456215);
////        clicked = true;
//       TheStopWatchFunc();
//    }      
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new NewJFrame().setVisible(true);
////            }
////        });
//        
//        //new NewJFrame(true);
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    // End of variables declaration//GEN-END:variables

    public void printText(double counter){
        repaint();
    numFormat.applyPattern("00.00");	
    jLabel1.setText(numFormat.format(counter));
    }
    

// Note you must use final method arguments to be available inside an anonymous class
public void changeJLabel(final double text) {
  EventQueue.invokeLater(new Runnable() {
      
      //numFormat.applyPattern("0.00");	
    
    
    @Override
    public void run() {
      jLabel1.setText(numFormat.format(text));
    }
  });
}

public void TheStopWatchFunc(){
 //START
        // running = true;
        long lastLoopTime = System.nanoTime();//used in the loop
		while(running)//my awesome game loop, it's smooth and simple. there are better game loops but I like this one
		{
                    
                long now = System.nanoTime();//now = the current time in nanoseconds
    	        long updateLength = now - lastLoopTime;//updateLength = difference between the last loop's time and the current time
    	        lastLoopTime = now;
                
    		 if(NewRunning){
                     if(SixMinutesOrFourMinutes==0){
                         
                         if(minutes==6){
                            minutes = minutes - 1;  
                             numFormat.applyPattern("0.");	
                     jLabel2.setText(numFormat.format(minutes));
                     OnaBreak = 1;
                         }
                  
                if(counter <= 0)
                {
                    if(minutes<=0){
                      counter = 0;//in case the counter dips below 1 it is now made to be zero.
                      minutes=0;
                        countStart = false;
                        countOver = true;
                        NewRunning=false;
                        numFormat.applyPattern("00.00");	
                jLabel2.setText("0.");
                jLabel1.setText(numFormat.format(counter));
                    }else if(minutes==3 && OnaBreak < 3){
                        OnaBreak = 2;
                        PausedPressed = true;
                        StopPressed = false;
                        SixMinutesOrFourMinutes = 0;
                      counter = 0;//in case the counter dips below 1 it is now made to be zero.
                      //minutes=2;
                        //countStart = false;
                        //countOver = true;
                        NewRunning=false;
                        numFormat.applyPattern("00.00");	
                jLabel2.setText("3.");
                jLabel1.setText(numFormat.format(counter));
                    }
                    else{
                    NewRunning = true;  
                    counter = 60;
                    minutes = minutes - 1;
                    numFormat.applyPattern("0.");	
                     jLabel2.setText(numFormat.format(minutes));
                    }
                }else{
                numFormat.applyPattern("00.00");	
                jLabel1.setText(numFormat.format(counter));
                System.out.println(counter);
                }

    	        double delta = updateLength / ((double)OPTIMAL_TIME);
                counter -= delta*.01;//delta*.01 will subtract 1.0 a second from the counter
                
                }else if(SixMinutesOrFourMinutes==1){
                         if(minutesForFourMinutes==4){
                            minutesForFourMinutes = minutesForFourMinutes - 1;  
                             numFormat.applyPattern("0.");	
                     jLabel2.setText(numFormat.format(minutesForFourMinutes));
                     OnaBreak = 1;
                         }
                  
                if(counterForFourMinutes <= 0)
                {
                    if(minutesForFourMinutes<=0){
                      counterForFourMinutes = 0;//in case the counter dips below 1 it is now made to be zero.
                      minutesForFourMinutes=0;
                        countStart = false;
                        countOver = true;
                        NewRunning=false;
                        numFormat.applyPattern("00.00");	
                jLabel2.setText("0.");
                jLabel1.setText(numFormat.format(counterForFourMinutes));
                    }else if(minutesForFourMinutes==2 && OnaBreak < 3){
                        OnaBreak = 2;
                        PausedPressed = true;
                        StopPressed = false;
                        SixMinutesOrFourMinutes = 1;
                      counterForFourMinutes = 0;//in case the counter dips below 1 it is now made to be zero.
                      //minutes=2;
                        //countStart = false;
                        //countOver = true;
                        NewRunning=false;
                        numFormat.applyPattern("00.00");	
                jLabel2.setText("2.");
                jLabel1.setText(numFormat.format(counterForFourMinutes));
                    }
                    else{
                    NewRunning = true;  
                    counterForFourMinutes = 60;
                    minutesForFourMinutes = minutesForFourMinutes - 1;
                    numFormat.applyPattern("0.");	
                     jLabel2.setText(numFormat.format(minutesForFourMinutes));
                    }
                }else{
                numFormat.applyPattern("00.00");	
                jLabel1.setText(numFormat.format(counterForFourMinutes));
                }

    	        double delta = updateLength / ((double)OPTIMAL_TIME);
                counterForFourMinutes -= delta*.01;//delta*.01 will subtract 1.0 a second from the counter
                
                
                
                }
                }
                 
                if(clickedForThirtySeconds){

                if(counterForThirtySeconds <= 0)
                {
                    counterForThirtySeconds = 0;
                    clickedForThirtySeconds = false;
                    numFormat.applyPattern("00.00");	
                     jLabel3.setText(numFormat.format(counterForThirtySeconds));
                     counterForThirtySeconds = 30;
                }else{
                numFormat.applyPattern("00.00");	
                jLabel3.setText(numFormat.format(counterForThirtySeconds));
                }

    	        double delta = updateLength / ((double)OPTIMAL_TIME);
                counterForThirtySeconds -= delta*.01;//delta*.01 will subtract 1.0 a second from the counter
                
                }
   
    
//                TheWindow.changeJLabel(counter);
    	        //paintGui();
                
    	    
    	        try{Thread.sleep((lastLoopTime-System.nanoTime())/1000000 + 10 );}
    	        catch(Exception ex){}//this catch is thrown every once and a while but that does not matter much
		}   
        //END
}

    private void setIcon() {
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("stopwatch2.png")));
        
    }

}
